name: Release Build

on:
  workflow_dispatch:

permissions:
  contents: read

jobs:

  Win64:
    if: github.repository == 'darktable-org/darktable' || github.event_name == 'workflow_dispatch'
    name: Nightly darktable win64
    runs-on: windows-latest
    environment: Release Build
    strategy:
      fail-fast: true
      matrix:
        btype: [Release]
        compiler:
          - { compiler: GNU,  CC: gcc,   CXX: g++ }
        eco: [-DBINARY_PACKAGE_BUILD=ON]
        target: [skiptest]
    defaults:
      run:
        shell: msys2 {0}
    env:
      CC: ${{ matrix.compiler.CC }}
      CXX: ${{ matrix.compiler.CXX }}
      SRC_DIR: ${{ github.workspace }}/src
      BUILD_DIR: ${{ github.workspace }}/build
      INSTALL_PREFIX: ${{ github.workspace }}/install
      ECO: ${{ matrix.eco }}
      CMAKE_BUILD_TYPE: ${{ matrix.btype }}
      GENERATOR: Ninja
      TARGET: ${{ matrix.target }}
    steps:
      - uses: msys2/setup-msys2@v2
        with:
          msystem: ucrt64
          install: >-
            base-devel
            git
            intltool
            po4a
          pacboy: >-
            cc:p
            cmake:p
            ninja:p
            nsis:p
            python-jsonschema:p
            dbus-glib:p
            drmingw:p
            exiv2:p
            gcc-libs:p
            gettext:p
            gmic:p
            graphicsmagick:p
            gtk3:p
            icu:p
            iso-codes:p
            lcms2:p
            lensfun:p
            libavif:p
            libexif:p
            libgphoto2:p
            libheif:p
            libjpeg-turbo:p
            libjxl:p
            libsecret:p
            libtiff:p
            libwebp:p
            libxml2:p
            libxslt:p
            lua:p
            omp:p
            openexr:p
            openjpeg2:p
            osm-gps-map:p
            portmidi:p
            pugixml:p
            SDL2:p
            sqlite3:p
            zlib:p
          update: true
      - run: git config --global core.autocrlf input
        shell: bash
      - uses: actions/checkout@v3
        with:
          ref: ${{ vars.RELEASE_TAG }}
          fetch-depth: 0
          submodules: true
          path: src
      - name: Update lensfun data
        if: ${{ success() && matrix.btype == 'Release' && matrix.target == 'skiptest' }}
        continue-on-error: true
        run: |
          lensfun-update-data
      - name: Build and Install
        run: |
          cmake -E make_directory "${BUILD_DIR}"
          cmake -E make_directory "${INSTALL_PREFIX}"
          $(cygpath ${SRC_DIR})/.ci/ci-script.sh
      - name: Check if it runs
        run: |
          $(cygpath ${INSTALL_PREFIX})/bin/darktable.exe --version || true
          $(cygpath ${INSTALL_PREFIX})/bin/darktable-cli.exe \
                 --width 2048 --height 2048 \
                 --hq true --apply-custom-presets false \
                 $(cygpath ${SRC_DIR})/src/tests/integration/images/mire1.cr2 \
                 $(cygpath ${SRC_DIR})/src/tests/integration/0000-nop/nop.xmp \
                 output.png \
                 --core --disable-opencl --conf host_memory_limit=8192 \
                 --conf worker_threads=4 -t 4 \
                 --conf plugins/lighttable/export/force_lcms2=FALSE \
                 --conf plugins/lighttable/export/iccintent=0
      - name: Package
        if: ${{ success() && matrix.btype == 'Release' && matrix.target == 'skiptest' }}
        run: |
          cd "${BUILD_DIR}"
          cmake --build "${BUILD_DIR}" --target package
      - name: Get version info
        run: |      
          cd ${SRC_DIR}
          echo "VERSION=$(git describe --tags | sed 's/^release-//;s/-/+/;s/-/~/;s/rc/~rc/')" >> $GITHUB_ENV
          ([[ ${MSYSTEM_CARCH} == x86_64 ]] && echo "SYSTEM=win64" || echo "SYSTEM=woa64") >> $GITHUB_ENV
      - name: Package upload
        if: ${{ success() && matrix.btype == 'Release' && matrix.target == 'skiptest' }}
        uses: actions/upload-artifact@v3
        with:
          name: darktable-${{ env.VERSION }}-${{ env.SYSTEM }}.exe
          path: ${{ env.BUILD_DIR }}/darktable-${{ env.VERSION }}-${{ env.SYSTEM }}.exe
          retention-days: 2

